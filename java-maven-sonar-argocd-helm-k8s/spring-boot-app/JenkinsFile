pipeline {
    agent any


    stages {
        stage('Build') {
            steps {
                sshagent(['ssh-credential-id']) {
                    sh '''
                    ssh -o StrictHostKeyChecking=no ubuntu@3.144.136.91 "cd Jenkins-Zero-To-Hero/java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package"
                    '''
                }
            }
        }


        stage('Build and Push Docker Image') {
           environment {
                  DOCKER_IMAGE = "bhavanabc/ultimate-cicd:${BUILD_NUMBER}"
                  DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
                  REGISTRY_CREDENTIALS = credentials('bhavanabc')
           }
           steps {
                                                     sshagent(['ssh-credential-id']) {
                                                         sh '''
                                                         ssh -o StrictHostKeyChecking=no ubuntu@3.144.136.91 "
                                                             cd Jenkins-Zero-To-Hero/java-maven-sonar-argocd-helm-k8s/spring-boot-app &&
                                                             docker build -t ${DOCKER_IMAGE} . &&
                                                             docker images &&
                                                             echo ${REGISTRY_CREDENTIALS_PSW} | docker login -u ${REGISTRY_CREDENTIALS_USR} --password-stdin &&
                                                             docker tag ${DOCKER_IMAGE} bhavanabc/ultimate-cicd:${BUILD_NUMBER} &&
                                                             docker push bhavanabc/ultimate-cicd:${BUILD_NUMBER}"
                                                         '''
                                                     }


           }
        }
    }

    post {
        always {
            // Clean up workspace after build
            cleanWs()
        }
    }
}