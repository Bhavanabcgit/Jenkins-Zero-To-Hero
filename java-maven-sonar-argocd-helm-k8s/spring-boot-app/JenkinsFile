pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "bhavanabc/ultimate-cicd:${BUILD_NUMBER}"
        DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
    }

    stages {
        stage('Build') {
            steps {
                sshagent(['ssh-credential-id']) {
                    sh '''
                    ssh -o StrictHostKeyChecking=no ubuntu@3.144.136.91 "cd Jenkins-Zero-To-Hero/java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package"
                    '''
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                sshagent(['ssh-credential-id']) {
                    sh '''
                    ssh -o StrictHostKeyChecking=no ubuntu@3.144.136.91 "cd Jenkins-Zero-To-Hero/java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} ."
                    '''
                }
            }
        }
    }

    post {
        always {
            // Clean up workspace after build
            cleanWs()
        }
    }
}
